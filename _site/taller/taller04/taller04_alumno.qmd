---
title: "Taller 4"
---

## Introducción

En este tercer taller del curso revisaremos algunas funciones adicionales del paquete `{dplyr}` para el manejo de datos. Asimismo, revisaremos cómo podemos realizar un `análisis inicial de datos` y un análisis descriptivo de estos.

## Cargar paquetes

```{r}
# Antes de cargar los siguientes paquetes, se deben instalar desde los paquetes.
library(tidyverse)                   # Varias funciones de tidyverse (dplyr, ggplot2, etc.)
library(rio)                         # Navaja suiza de la importación de datos 
library(labelled)                    # Proporciona look_for()
library(skimr)                       # Análisis inicial de datos
library(Hmisc)                       # Análisis inicial de datos
library(janitor)                     # Para identificar duplicados
library(visdat)                      # Inspección de datos perdidos
library(VIM)                         # Inspección de datos perdidos
library(naniar)                      # Inspección de datos perdidos
```

## Repaso de clases anteriores

### Ejercicio 1

Importar la base de datos "data_enaho2017_v2" y guardarla como "data_enaho". 



### Ejercicio 2

En la data, renombrar manualmente las siguientes variables y guardelas en un objeto llamado "data_clean":

- `codperso` $\rightarrow$ `id`
- `tiene_agua_potable` $\rightarrow$ `agua_pot`
- `acceso_agua` $\rightarrow$  agua_acc`
- `cuantas_horas_si_agua` $\rightarrow$ `agua_sihoras`
- `procedencia_agua` $\rightarrow$ `agua_proc`



### Ejercicio 3

En la data_clean, renombrar manualmente las siguientes variables:

- `necesid_basicas_insatisf_vivie` $\rightarrow$ `nbi_vivie`
- `necesid_basicas_insatist_hacin` $\rightarrow$ `nbi_hacin`
- `necesid_basicas_insatisf_sshh` $\rightarrow$ `nbi_sshh`
- `necesid_basicas_insatisf_noesc`  $\rightarrow$ `nbi_noesc`
- `necesid_basicas_insatisf_depec` $\rightarrow$ `nbi_depec`



### Ejercicio 4

En data_clean, colocar la variable "id" al inicio de todas las variables 



### Ejercicio 5

En data_clean, cree una nueva variable llamada "año" que contenga el valor 2017 para todas las observaciones



### Ejercicio 6

En data_clean, cree una variable llamada "conectividad" que sea un duplicado de la variable "tiene_internet"



### Ejercicio 7

En data_clean, seleccionar solo las variables que inicien con "nbi"



## Manejo de datos 2

### Ejercicio 8

En data_clean, recodificar todas las variables que inicien con "nbi", donde No = 0 y Si = 1



### Ejercicio 9

Asignar valores a las categorías de la variable region de la siguiente manera:

- Costa Norte --> 1
- Costa Centro --> 2
- Costa Sur  --> 3
- 4 --> Sierra Norte
- 5 --> Sierra Centro
- 6 --> Sierra Sur
- 7 --> Selva
- 8 --> Lima Metropolitana



### Ejercicio 10

Crear una variable llamada "region3" cuyas categorías depende del valor de region de la siguiente manera:

- Costa norte, costa centro y costa sur = "0"

- Sierra norte, sierra centro y sierra sur = "1"

- Selva = "2"

- Lima Metropolitana = "3"



### Ejercicio 11

Crear la variable indice de masa corporal y llarmala imc. 



### Ejercicio 12

Crear una nueva variable llamada "imc_cat" cuyas categorías dependan de los valores de imc de la siguiente manera:

- imc < 25 = "normal
- 25 <= imc < 30 = "sobrepeso"
- imc>=30 = "obesidad"



## Análisis Inicial de DAtos

### Ejercicio 13

Inspeccione de manera global a `data_clean()`. Compare los resultados que dan. Discuta sus ventajas y desventajas. ¿Alguna es mejor que otra?



### Ejercicio 14

Identificar si en la base de datos existen filas duplicadas



### Ejercicio 15

También verificar si existen duplicados de ID.



### Ejercicio 16

Identificar si en la base de datos existen valores perdidos y en qué variables



### Ejercicio 17

Evaluar si los datos perdidos de cada variable se relacionan o vinculan entre sí con el de otras variables


