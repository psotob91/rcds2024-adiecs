---
title: "<font color='white'>Taller 6</font>"
subtitle: "Análisis Estadístico de Datos en Salud"
author: 
  - Percy Soto-Becerra
  - Anthony Romero
date: last-modified
date-format: "DD-MM-YYYY"
description: "PFC 2023 -– IETSI, EsSalud"
format: 
  html:
    toc: true
    toc-depth: 3
    toc-title: "Índice"
    toc-location: right
    embed-resources: true
    number-sections: true
    theme: cerulean
    title-block-style: default
    title-block-banner: true
    section-divs: true
    css: [include/webex.css, include/styles.css]
    include-after-body: include/webex.js
    code-block-border-left: false
lang: es
execute: 
  message: false
  warning: false
---

```{r}
#| include: false
library(tidyverse)     # Varias funciones de tidyverse (dplyr, ggplot2, etc.)
library(rio)           # Navaja suiza de la importación de datos
library(haven)           # Importación de datos dta
library(skimr)         # Análisis inicial de datos
library(janitor)       # Funciones para manejo y limpieza de datos (p. ej, get_dupes)
library(gtsummary)     # Tablas estadísticas reproducibles y listas para su publicación   
library(gginference)
library(rstatix)
library(gt)
```

## Introducción

En este sexto taller del curso terminaremos análisis descriptivo revisando descripción gráfica de datos categóricos para luego iniciar con el anális inferencial de datos mediante pruebas de hipótesis con paquetes como `rstatix`. Para este fin, vamos a trabajar con los datos de un diseño de experimento que buscó evaluar el efecto de un suplemento que contiene maca en algunos desenlaces relacionados a menopausia (imc, hormonas sexuales, etc.).


## Cargar paquetes

```{r}
# Antes de cargar estos paquetes, se deben instalar desde la pestaña "Packages" en el panel de utilidades (inferior derecho).

library(tidyverse)                   # Varias funciones de tidyverse (dplyr, ggplot2, etc.)
library(rio)                         # Navaja suiza de la importación de datos
library(skimr)                       # Análisis inicial de datos
library(Hmisc)                       # Análisis inicial de datos
library(janitor)                     # Para identificar duplicados
library(gtsummary)                   # Para tablas estadísticas reproducibles
library(rstatix)                     # Para pruebas de hipótesis 
library(ggpubr)                      # Para gráficos que evalúan supuestos
library(gt)                          # Para un reporte más elegante
```

## Análisis descriptivo gráfico de datos categóricos

### Importar bases de datos

Importemos las bases utilizadas en la sesión anterior para continuar analizando los datos categóricos, ahora mediante gráficos:

```{r}
#Importamos linelist_cleaned
data_ebola <- import("linelist_cleaned.rds")

#Importamos boost_inmuno
data_inmuno <- import("boost_inmuno.dta")
```

Utilicemos `ggplot2` de `Tidyverse` con las funciones para elaborar gráficos de barra en sus distintas versiones y aspectos estéticos.

### Ejercicio 1 {.unnumbered}

Elabore un gráfico de barras con `geom_bar()` para presentar la variable "tipo_refuerzo" de `data_inmuno`. Use la forma de data individual y la forma de datos agregados:

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

- Datos individuos, uso directo de `geom_bar()`:

```{r}
data_inmuno %>%  
  ggplot(aes(x = tipo_refuerzo, fill = tipo_refuerzo)) +
  geom_bar()
```

- Uso de datos agregados, primero hay que agregar con count:

```{r}
data_inmuno %>% 
  count(tipo_refuerzo)
```

- Sobre esta data agregada es que aplicamos el geom_bar() pero tenemos que decirle que los estadísticos (`stat`) que usaré son exactamente iguales (`identity`) a los datos que están en el data.frame agregado:

```{r}
data_inmuno %>% 
  count(tipo_refuerzo) %>%
  ggplot(aes(x = tipo_refuerzo, y = n)) + 
  geom_bar(stat = "identity") # Con datos agregados es vital usar stat.
```

- Aunque podemos usar geom_bar() directamente con datos individuales, en la experiencia personal de los profesores, es mejor usar geom_bar con datos agregados. Es más intuitivo y coherente y permite generalizar más fácilmente con estructura de datos más complejas. 

:::

:::{.callout-note collapse=false appearance='default' icon=true}
## Atajo a geom_bar() para datos agregados
- Cuando se usa datos agregados también podemos usar un atajo de geom_bar() que se llama geom_col(). Este asume que se trabaja con datos agregados, así que no necesita stat = "identity".

```{r}
data_inmuno %>% 
  count(tipo_refuerzo) %>%
  ggplot(aes(x = tipo_refuerzo, y = n)) + 
  geom_col() # No necesita stat = identity
```

:::


### Ejercicio 2 {.unnumbered}

Elabore un gráfico de barras con geom_bar() para presentar la variable "sexo" de `data_inmuno`. Haga una versión vertical y otra horizontal. Agregarle aspectos estéticos como color, etiqueta y explore distintos temas (minimal, classic, dark, linedraw, light) etc.:

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

- Versión vertical:

```{r}
data_inmuno %>% 
  count(sexo) %>%
  ggplot(aes(x = sexo, y = n)) +
  geom_bar(stat = "identity")
```

- Versión horizontal:

```{r}
data_inmuno %>% 
  count(sexo) %>%
  ggplot(aes(x = n, y = sexo)) +
  geom_bar(stat = "identity")
```

- Versión con elementos estéticos:

```{r}
data_inmuno %>% 
  count(sexo) %>%
  ggplot(aes(x = n, y = sexo)) +
  geom_bar(stat = "identity") +
  labs(y = "Sexo", x = "Frecuencia absoluta") +
  theme_light()
```

:::

### Ejercicio 3 {.unnumbered}

Con los datos del ejercicio anterior, haga un gráfico de frecuencias relativas con geom_bar() en posición vertical:

::: {.callout-caution collapse="true"}

## Solución

- Hay que tener % en vez de frecuencias absolutas. Podemos usar `mutate` después de `count` para crear una nueva columna que represente porcentajes:

```{r}
data_inmuno %>% 
  count(sexo) %>%
  mutate(porcentaje = 100 * n / sum(n))
```

- Luego, graficamos porcentje en vez de n:

```{r}
data_inmuno %>% 
  count(sexo) %>%
  mutate(porcentaje = 100 * n / sum(n)) %>% 
  ggplot(aes(x = sexo, y = porcentaje)) +
  geom_bar(stat = "identity")
```

::: 


### Ejercicio 4 {.unnumbered}

Elabore un gráfico de barras con geom_bar() para presentar la variable "outcome" de `data_ebola`, agregarle aspectos estéticos como color, etiqueta y explore distintos temas (minimal, classic, dark, linedraw, light) etc.:

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

- Notar que hay un NA:

```{r}
data_ebola %>% 
  count(outcome) %>%
  ggplot(aes(x = outcome, y = n)) +
  geom_bar(stat = "identity") +
  xlab("Outcome") + 
  ylab("Frecuencia absoluta") +
  theme_light()
```

- Para no graficarlo, hay que eliminarlo primero:

```{r}
data_ebola %>%   
  filter(!is.na(outcome)) |> 
  count(outcome) %>%
  ggplot(aes(x = outcome, y = n)) +
  geom_bar(stat = "identity") +
  xlab("Outcome") + 
  ylab("Frecuencia absoluta") +
  theme_light()
```

:::

### Ejercicio 5 {.unnumbered}

Elabore un gráfico de barras con geom_bar() apiladas para presentar la variable "outcome" de `data_ebola`, agregarle aspectos estéticos como color, etiqueta y explore distintos temas (minimal, classic, dark, linedraw, light) etc.:

___Tip: Usar gráfico anterior y modificarlo___

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

```{r}
data_ebola %>%   
  filter(!is.na(outcome)) |> 
  count(outcome) %>%
  ggplot(aes(x = "", y = n, fill = outcome)) + # x debe quedar vacio, fill debe ser el outcome
  geom_bar(stat = "identity", position = "stack") # hay que indicarle position = stack
```
:::


### Ejercicio 6 {.unnumbered}

A partir del gráfico de barras del ejercicio 4, elabore un gráfico que compare la frecuencia absoluta del outcome según genero.

::: {.callout-caution collapse="true"}

## Solución

- Primero debemos agrupar por sexo. Notar que hemos eliminado lo datos perdidos de ambos.

```{r}
data_ebola %>%   
  filter(!is.na(outcome), !is.na(gender)) %>% 
  group_by(gender) %>%
  count(outcome)
```

- Luego, hacemos el gráfico:

```{r}
data_ebola %>%   
  filter(!is.na(outcome), !is.na(gender)) %>% 
  group_by(gender) %>%
  count(outcome) %>%
  ggplot(aes(x = gender, y = n, fill = outcome)) +
  geom_bar(stat = "identity") 
```

- Podemos solo representar a los muertos agregando un filter más:

```{r}
data_ebola %>%   
  filter(!is.na(outcome), !is.na(gender)) %>% 
  group_by(gender) %>%
  count(outcome) %>%
  filter(outcome == "Death") %>%
  ggplot(aes(x = gender, y = n, fill = outcome)) +
  geom_bar(stat = "identity") 
```

:::


# Introducción a las pruebas de hipótesis

Para esta parte de la sesión, vamos a importar la base de datos con el nombre `datos_maca` (utilice la función `characterize()`)

```{r}
datos_maca <- import("maca_meno_fase1.dta") %>% 
  characterize()
```

::: {.callout-caution collapse="true"}
## Exploremos la data

```{r}
datos_maca %>% 
  head()

datos_maca %>% 
  glimpse()
```

:::

## Pruebas de hipótesis de un grupo

### Ejercicio 7  {.unnumbered}

Pruebe la hipótesis de que el promedio de peso es diferente de 65 kg en la medición basal. Evalúe los supuestos:

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

- Prueba de hipótesis sobre media sin gt():

```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  t_test(weight ~ 1, mu = 65, detailed = TRUE) 
```

- Interpretar valor p y también estimado puntual + IC95%. Resaltar la importancia del IC para valorar incertidumbre.

- Con gt() se mejora el reporte al renderiza (prueben renderizando):

```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  t_test(weight ~ 1, mu = 65, detailed = TRUE) %>% 
  gt()
```

- Supuestos:

    + Independencia de las observaciones: Discutir por diseño.
    + Muestra aleatoria: Discutir por diseño.
    + Distribución normal o aproximación por teorema de límite central (n muy grande + desviaciones de dist. normal leves a moderadas???)
    
    
```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  ggqqplot(x = "weight")
```

```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  shapiro_test(weight)
```

:::

:::{.callout-warning collapse=false appearance='default' icon=true}
## Precaución con pruebas de normalidad
- Las pruebas de hipótesis de normalidad son de poco valor con n muy pequeño (poca potencia).
- Del mismo modo, con n muy grandes (todo es NO normal a pesar de desviaciones muy pequeñas). 

- Además con n muy grandes, prueba es robusta incluso frente a desviaciones moderados de normalidad. 
- El uso de pruebas de hipótesis de supuestos en la práctica bioestadística actual no es recomendado. Su uso debe ser cuidadosamente evaluado y, en el caso se decida usarlo, como complemento a las evaluaciones gráficas.
:::


### Ejercicio 8  {.unnumbered}

Pruebe la hipótesis de que la mediana de talla es diferente de 1.3 m en la medición basal:

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  sign_test(height ~ 1, mu = 1.3, detailed = TRUE) %>% 
  gt()
```


- Supuestos:

    + Independencia de las observaciones: Discutir por diseño.
    + Muestra aleatoria: Discutir por diseño.
    + Distribución normal o aproximación por teorema de límite central (n muy grande + desviaciones de dist. normal leves a moderadas???)
    
    
```{r}
datos_maca %>% 
  filter(time == "Baseline") %>% 
  ggqqplot(x = "height")
```

:::

## Pruebas de hipótesis de dos grupos

### Ejercicio 9  {.unnumbered}

Evalúe si existe un efecto del tratamiento 1 vs el 2 (obvie el 3) sobre peso al final del estudio.

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

```{r}
datos_maca %>% 
  filter(time == "3 months", treat != "Dosis 2") %>% 
  t_test(weight ~ treat, detailed = TRUE) %>% 
  gt()
```



- Supuestos:

    + Independencia de las observaciones: Discutir por diseño.
    + Muestra aleatoria: Discutir por diseño.
    + Distribución normal o aproximación por teorema de límite central (n muy grande + desviaciones de dist. normal leves a moderadas???)
    - Homogeneidad de varianzas: Cuando no se usa alternativa robusta. En la práctica bioestadística habitual, se prefiere partir de alternativa robusta.
    
    
```{r}
datos_maca %>% 
  filter(time == "3 months", treat != "Dosis 2") %>% 
  ggqqplot(x = "weight", color = "treat")
```

- Si las rectas qqnorm son paralelas, es evidencia de homogeneidad de varianzas, si se intersecan, hay heterogeneidad de varianzas.

- Tambien podemos comparar varianzas:

```{r}
datos_maca %>% 
  filter(time == "3 months", treat != "Dosis 2") %>% 
  group_by(treat) %>%
  summarise(var = var(weight, na.rm = TRUE))
```

- Se pueden usar pruebas de hipótesis pero estas tienen incluso supuestos más fuertes que las pruebas de normalidad, asimismo, el n las afecta.

:::

## Ejercicio 10  {.unnumbered}

Evalúe si existe un efecto del tratamiento 1 vs el 2 (obvie el 3) sobre estradiol al final del estudio.

_¿Cómo interpretarías los resultados encontrados? (discutirlo en la sesión)_

::: {.callout-caution collapse="true"}

## Solución

```{r}
datos_maca %>% 
  filter(time == "3 months", treat != "Dosis 2") %>% 
  t_test(e2 ~ treat, detailed = TRUE) %>% 
  gt()
```

:::

