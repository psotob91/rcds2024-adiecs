#| echo: false
datos_rename <-
data.frame(
Argumento = c(".data", "..."),
Descripción = c("Data frame o extensión de data frame (por ejemplo, tibble).",
"viejo_nombre = nuevo_nombre"))
datos_rename %>%
kbl(booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T)
#| echo: false
#| output: false
# Removing all objects including loaded libraries
rm(list = ls(all = TRUE))
gc()
# Installing and loading packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_unload("all") # Unloading all package except base
pacman::p_load(tidyverse,
tibble,
pander,
gt,
kableExtra,
DT,
haven) # Loading packages
datos_fase1 <- read_stata("maca_meno_fase1.dta") %>%
as_factor()
#| echo: false
#| fig-align: center
#| out-width: 50%
knitr::include_graphics("img/rio-hex.png")
#| echo: false
library(rio)
datos_csv <- import("maca_meno_perclin.csv")
head(datos_csv)
datos_xlsx <- import("maca_meno_perclin.xlsx")
head(datos_xlsx)
datos_dta <- import("maca_meno_fase1.dta")
head(datos_dta)
datos_sav <- import("RECH0.sav")
head(datos_sav)
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/metadatos.png")
datos_dta <- import("maca_meno_fase1_v2.dta")
head(datos_dta)
datos_dta <- import("maca_meno_fase1_v2.dta") %>%
characterize()
head(datos_dta)
datos_sav <- import("maca_meno_fase1_v2.sav")
head(datos_sav)
datos_sav <- import("maca_meno_fase1_v2.sav") %>%
characterize()
head(datos_sav)
#| echo: false
#| output: asis
tibble::tribble(
~Format, ~Typical.Extension,
"Comma-separated data",             ".csv",
"Pipe-separated data",             ".psv",
"Tab-separated data",             ".tsv",
"CSVY (CSV + YAML metadata header)",            ".csvy",
"SAS",        ".sas7bdat",
"SPSS",             ".sav",
"SPSS (compressed)",            ".zsav",
"Stata",             ".dta",
"SAS XPORT",             ".xpt",
"SPSS Portable",             ".por",
"Excel",             ".xls",
"Excel",            ".xlsx",
"R syntax",               ".R",
"Saved R objects",     ".RData, .rda",
"Serialized R objects",             ".rds",
"Epiinfo",             ".rec"
) %>%
pandoc.table(caption = "",
justify = "ll",
missing = "—",
split.tables = Inf,
col.names = c("Formato",
"Extensión típica"))
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(5)
#| echo: false
datos_mutate <-
data.frame(
Argumento = c(".data", "..."),
Descripción = c("Data frame o extensión de data frame (por ejemplo, tibble).",
"Columnas existente para modificar o columnas nuevas para crear."))
datos_mutate %>%
kbl(booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T)
datos_fase1 %>%
select(id, weight, height) %>% # Nos quedamos con peso y talla
mutate(imc = weight / height ^ 2) # Creamos IMC en base a peso y talla
datos_fase1 %>%
select(id, weight, height) %>%
mutate(
imc = weight / height ^ 2,
imc_escalado = imc / 10
)
datos_fase1 %>%
select(id, age) %>%
mutate(age2 = age * 12) # Columna nueva llamada age2
datos_fase1 %>%
select(id, age) %>%
mutate(age = age * 12) # Notar que se remplazó age
#| echo: false
datos_rename <-
data.frame(
Argumento = c(".data", "..."),
Descripción = c("Data frame o extensión de data frame (por ejemplo, tibble).",
"nuevo_nombre = viejo_nombre"))
datos_rename %>%
kbl(booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T)
datos_fase1 %>%
rename(
casado1 = married,
edad = age
)
library(labelled)
#| echo: false
datos_var_lab <-
data.frame(
Argumento = c(".data", "..."),
Descripción = c("Data frame o extensión de data frame (por ejemplo, tibble).",
"variable = 'nueva etiqueta'"))
datos_var_lab %>%
kbl(booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T)
#| echo: false
datos_rename <-
data.frame(
Argumento = c(".data", "..."),
Descripción = c("Data frame o extensión de data frame (por ejemplo, tibble).",
"viejo_nombre = nuevo_nombre"))
datos_rename %>%
kbl(booktabs = T) %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"),
full_width = T)
table(datos_fase1$married2)
datos_fase1 %>%
recode(married2,
"Without couple" = "Sin pareja",
"With couple" = "Con pareja")
datos_fase1 %>%
mutate(married2 = replace(married2, "Without couple", "Sin pareja"))
datos_fase1 %>%
mutate(married2 = replace(married2, married2 == "Without couple", "Sin pareja"))
datos_fase1 %>%
mutate(married2 = replace(married2, married2 == "Without couple", "Sin pareja"),
married2 = replace(married2, married2 == "With couple", "Con pareja"))
datos_fase1 %>%
mutate(married2 = replace(married3, married2 == "Without couple", "Sin pareja"),
married2 = replace(married3, married2 == "With couple", "Con pareja"))
datos_fase1 %>%
mutate(married3 = replace(married2, married2 == "Without couple", "Sin pareja"),
married3 = replace(married2, married2 == "With couple", "Con pareja"))
datos_fase1 %>%
mutate(married2 = recode(married2, "Without couple" = "Sin pareja",
"With couple" = "Con pareja"))
