}
pacman::p_unload("all") # Unloading all package except base
pacman::p_load(tidyverse, tibble, pander, gt) # Loading packages
#| echo: false
#| output: false
# Removing all objects including loaded libraries
rm(list = ls(all = TRUE))
gc()
# Installing and loading packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_unload("all") # Unloading all package except base
pacman::p_load(tidyverse, tibble, pander, gt) # Loading packages
#| echo: false
#| output: asis
tibble::tribble(
~Componente, ~Horas.Cronológicas, ~Horas.Académicas,
"Teoría",                 12L,               16L,
"Práctica",                 12L,               16L,
"Trabajo independiente*",                 12L,               16L
) %>%
pandoc.table(justify = "lcc", missing = "—",
col.names = c("Componente", "Horas Cronológicas", "Horas Académicas"))
1600 / 3
## Programación del curso
## Programación del curso
![](img/quarto-articulos.png)
#| echo: false
tipo_vector <- data.frame(
tipo = c("Entero", "Doble", "Caracter", "Lógicos", "Factor"),
tipo_ingles = c("Integer", "Double", "Character", "Logical", "Factor"),
desc = c("Solo números enteros", "Números", "Texto o cadenas ('strings')", "Verdadero o Falso", "Categorías"),
ejem = c("c(1, 2, 3, 4)", "c(1, 2.4, 3.14, 4)", "c('1', 'azul', 'divertido', 'monstruo')", "c(TRUE, FALSE, TRUE, FALSE)", "c('Muy intenso', 'Leve', 'Moderado', 'Leve')")
)
#| echo: false
#| output: asis
tipo_vector %>%
pandoc.table(justify = "lcc",
missing = "—",
col.names = c("Tipo de dato",
"(En inglés)",
"Descripción",
"Ejemplo"))
#| echo: false
#| output: asis
tipo_vector %>%
pandoc.table(col.names = c("Tipo de dato",
"(En inglés)",
"Descripción",
"Ejemplo"))
?pandoc.tanb
?pandoc.table
#| echo: false
#| output: asis
tipo_vector %>%
pandoc.table(justify = "lccc",
missing = "—",
col.names = c("Tipo de dato",
"(En inglés)",
"Descripción",
"Ejemplo"))
?pandoc.table
knitr::include_graphics("img/funcion-R.png")
#| echo: false
#| output: false
# Removing all objects including loaded libraries
rm(list = ls(all = TRUE))
gc()
# Installing and loading packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_unload("all") # Unloading all package except base
pacman::p_load(tidyverse,
tibble,
pander,
gt,
kableExtra) # Loading packages
#| echo: false
#| fig-align: center
#| out.width: 30%
knitr::include_graphics("img/R.png")
#| echo: false
#| fig-align: center
#| out.width: 70%
knitr::include_graphics("img/RStudio.png")
#| echo: false
#| fig-align: center
#| out.width: 100%
knitr::include_graphics("img/r-packages.png")
#| echo: false
#| fig-align: center
#| out.width: 200%
knitr::include_graphics("img/r-rpackages.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-rstudio-paq.png")
#| echo: false
#| out.width: 99%
knitr::include_graphics("img/tidyverse.png")
#| echo: false
#| fig-align: center
knitr::include_graphics("img/install-r.gif")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(10)
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-script.png")
#| echo: false
#| out.width: 100%
#| fig-align: center
knitr::include_graphics("img/rmarkdown.png")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(10)
#| echo: true
3 + 8
#| echo: true
3 - 8
#| echo: true
3 * 8
#| echo: true
3 * 8
#| echo: true
3 ^ 3 # ^ se obtiene mediante: ALT + 94
#| echo: true
sqrt(16)
#| echo: true
8 ^ (1 / 3) # Raíz cúbica
#| echo: true
15 + (64 - 60) ^ (1/2)
#| echo: true
log(12) # log es logaritmo natural o neperiano
#| echo: true
log10(100)
#| echo: true
exp(2)
#| echo: true
pi
#| echo: true
5 > 4
#| echo: true
6 <= 3
#| echo: true
7 == 7
#| echo: true
8 != 5
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/funcion-R.png")
#| echo: true
library(medicaldata)
data(covid_testing)
head(covid_testing)
covid_testing$gender
covid_testing$age
genero <- covid_testing$gender
#| echo: false
#| output: false
# Removing all objects including loaded libraries
rm(list = ls(all = TRUE))
gc()
# Installing and loading packages
if (!require("pacman")) {
install.packages("pacman")
}
pacman::p_unload("all") # Unloading all package except base
pacman::p_load(tidyverse,
tibble,
pander,
gt,
kableExtra) # Loading packages
#| echo: false
#| fig-align: center
#| out.width: 30%
knitr::include_graphics("img/R.png")
#| echo: false
#| fig-align: center
#| out.width: 70%
knitr::include_graphics("img/RStudio.png")
#| echo: false
#| fig-align: center
#| out.width: 100%
knitr::include_graphics("img/r-packages.png")
#| echo: false
#| fig-align: center
#| out.width: 200%
knitr::include_graphics("img/r-rpackages.png")
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-rstudio-paq.png")
#| echo: false
#| out.width: 99%
knitr::include_graphics("img/tidyverse.png")
#| echo: false
#| fig-align: center
knitr::include_graphics("img/install-r.gif")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(10)
#| echo: false
#| fig-align: center
#| out.width: 90%
knitr::include_graphics("img/r-script.png")
#| echo: false
#| out.width: 100%
#| fig-align: center
knitr::include_graphics("img/rmarkdown.png")
#| echo: false
library(countdown)
countdown_timer <- function(
minutes = 1,
play_sound = TRUE,
font_size = "2em",
...
) {
countdown(
minutes = minutes,
# Fanfare when it's over
play_sound = play_sound,
# Set timer theme to match solarized colors
color_border              = "#404041",
color_text                = "white",
color_background = "#000000",
color_running_background  = "#72994E",
color_running_text        = "white",
color_finished_background = "#EE6331",
color_finished_text       = "white",
font_size = font_size,
...
)
}
#| echo: false
countdown_timer(10)
#| echo: true
3 + 8
#| echo: true
3 - 8
#| echo: true
3 * 8
#| echo: true
3 * 8
#| echo: true
3 ^ 3 # ^ se obtiene mediante: ALT + 94
#| echo: true
sqrt(16)
#| echo: true
8 ^ (1 / 3) # Raíz cúbica
#| echo: true
15 + (64 - 60) ^ (1/2)
#| echo: true
log(12) # log es logaritmo natural o neperiano
#| echo: true
log10(100)
#| echo: true
exp(2)
#| echo: true
pi
#| echo: true
5 > 4
#| echo: true
6 <= 3
#| echo: true
7 == 7
#| echo: true
8 != 5
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/funcion-R.png")
#| echo: true
library(medicaldata)
data(covid_testing)
head(covid_testing)
covid_testing$gender
covid_testing$age
rm(countdown_timer)
covid_testing$gender
head(covid_testing$gender)
genero_resumen <- head(covid_testing$gender)
genero_resumen <- head(covid_testing$gender)  # Guardar resultado
genero_resumen                                # Imprimir resultados
rm(genero_resumen)
genero_resumen <- head(covid_testing$gender)
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/resultado-imprimir.png")
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/environment.png")
#| echo: false
#| fig-align: center
#| out-width: 100%
knitr::include_graphics("img/environment.png")
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Símbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
)
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Símbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
) %>%
pander_table()
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Símbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
) %>%
pandoc.table(caption = "",
justify = "lcll",
missing = "—",
split.tables = Inf,
col.names = c("Tipo de dato",
"(En inglés)",
"Descripción",
"Ejemplo"))
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Simbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
) %>%
pandoc.table(caption = "",
justify = "lcll",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Uso"))
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Simbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
) %>%
pandoc.table(caption = "",
justify = "lcl",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Uso"))
#| echo: false
#| output: asis
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>"),
Simbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...")
) %>%
pandoc.table(caption = "",
justify = "lcl",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Uso"))
#| echo: false
#| output: asis
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>",
"<kbd>Alt</kbd> + <kbd>38</kbd>"),
Simbolo = c("^", "~"),
Uso = c("Elevado a la potencia ...", "En relación a ...", "... Y ..."),
Comentario = c("Operador aritmético", "Operador aritmético", "Operador booleano")
) %>%
pandoc.table(caption = "",
justify = "llll",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Significado",
"Operador booleano"))
#| echo: false
#| output: asis
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>",
"<kbd>Alt</kbd> + <kbd>38</kbd>"),
Simbolo = c("^", "~", "&", "|"),
Uso = c("Elevado a la potencia ...", "En relación a ...", "... Y ...", "... O ..."),
Comentario = c("Operador aritmético",
"Operador aritmético",
"Operador booleano",
"Operador booleano")
) %>%
pandoc.table(caption = "",
justify = "llll",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Significado",
"Operador booleano"))
#| echo: false
#| output: asis
data.frame(
Atajo = c("<kbd>Alt</kbd> + <kbd>94</kbd>",
"<kbd>Alt</kbd> + <kbd>126</kbd>",
"<kbd>Alt</kbd> + <kbd>38</kbd>",
"<kbd>Alt</kbd> + <kbd>124</kbd>"),
Simbolo = c("^", "~", "&", "|"),
Uso = c("Elevado a la potencia ...", "En relación a ...", "... Y ...", "... O ..."),
Comentario = c("Operador aritmético",
"Operador aritmético",
"Operador booleano",
"Operador booleano")
) %>%
pandoc.table(caption = "",
justify = "llll",
missing = "—",
split.tables = Inf,
col.names = c("Atajo",
"Símbolo",
"Significado",
"Operador booleano"))
```{r}
library(dslabs)
data("gapminder")
head(gapminder)
library(medicaldata)
data("covid_testing")
##
?fa
?fontawesome::fa()
fontawesome::fa_metadata("mobile")
fontawesome::fa_metadata(mobile)
fontawesome::fa_metadata("fa mobile")
